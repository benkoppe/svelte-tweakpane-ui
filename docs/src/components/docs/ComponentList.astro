---
import { getCollection, type CollectionEntry } from 'astro:content';
import { marked } from 'marked';

interface Props {
	scope?: string;
}

const { scope } = Astro.props;

const components = (await getCollection('docs')).filter((component: CollectionEntry<'docs'>) => {
	return (
		component.data.componentData !== undefined &&
		(scope === undefined ? true : component.data.componentData.pathParts.includes(scope))
	);
});

async function firstLine(str: string): Promise<string> {
	return await marked.parseInline(str.split('\n\n')[0]);
}
---

<ul>
	{
		components.map(async (component) => {
			const { componentData } = component.data;
			if (componentData) {
				return (
					<li>
						<a class="component" href={component.slug} set:html={componentData.name} />
						<br />
						<fragment set:html={await firstLine(componentData.doc)} />
					</li>
				);
			}
		})
	}
</ul>

<style>
	a.component {
		font-family: var(--sl-font-system-mono);
		font-weight: bold;
		font-size: var(--sl-text-base);
	}

	a.component::before {
		content: '<';
	}

	a.component::after {
		content: '>';
	}
</style>
