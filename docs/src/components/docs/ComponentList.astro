---
import type { CollectionEntry } from 'astro:content'
import { getCollection } from 'astro:content'
import { marked } from 'marked'

type Props = {
	scope?: string
}

const { scope } = Astro.props

const documentation = await getCollection('docs')
const components = documentation.filter(
	(component: CollectionEntry<'docs'>) =>
		component.data.componentData !== undefined &&
		(scope === undefined ? true : component.data.componentData.pathParts.includes(scope)),
)

async function firstLine(text: string): Promise<string> {
	return marked.parseInline(text.split('\n\n')[0])
}
---

<ul>
	{
		components.map(async (component) => {
			const { componentData } = component.data
			if (componentData) {
				return (
					<li>
						<a class="component" href={component.slug} set:html={componentData.name} />
						<br />
						<fragment set:html={await firstLine(componentData.doc)} />
					</li>
				)
			}
		})
	}
</ul>

<style>
	a.component {
		font-family: var(--sl-font-system-mono);
		font-size: var(--sl-text-base);
		font-weight: bold;
	}

	a.component::before {
		content: '<';
	}

	a.component::after {
		content: '>';
	}
</style>
